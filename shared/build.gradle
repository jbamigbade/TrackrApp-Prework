/*
 * Copyright (C) 2021 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdk 31
    buildToolsVersion build_tools_version

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        consumerProguardFiles 'consumer-rules.pro'
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        // Enable Room's incremental annotation processor
                        "room.incremental": "true"
                ]
            }
        }
        vectorDrawables.useSupportLibrary = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        lintConfig file('../lint.xml')
    }

    testOptions {
        unitTests.all {
            systemProperty 'robolectric.enabledSdks', '30'
        }
        unitTests {
            includeAndroidResources = true
        }
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs += [
                '-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi',
        ]
    }
}

dependencies {
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:1.1.5"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:2.1.20"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.10.2"

    kapt 'com.google.dagger:hilt-android-compiler:2.56.2'
    implementation 'com.google.dagger:hilt-android:2.56.2'

    kapt 'androidx.room:room-compiler:2.7.1'
    api 'androidx.room:room-ktx:2.7.1'

    testImplementation "org.robolectric:robolectric:4.14.1"
    testImplementation "junit:junit:4.13.2"
    testImplementation "androidx.test.ext:junit:1.2.1"
    testImplementation "com.google.truth:truth:1.4.4"
    testImplementation "androidx.test:core:1.6.1"
    testImplementation "androidx.arch.core:core-testing:2.2.0"
    testImplementation 'androidx.room:room-testing:2.7.1'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.10.2"
}
repositories {
    google()
    mavenCentral()
}